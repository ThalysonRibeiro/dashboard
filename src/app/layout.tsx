import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import { Bounce, ToastContainer } from 'react-toastify';
import { ThemeProvider } from '@/components/theme-provider';
import AppProvider from '@/context/app-provider';
import { getCookieServer } from '@/lib/cookieServer';
import { getUserFromHeaders } from '@/lib/getUserFromHeaders';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const accessToken = await getCookieServer();
  const userHeaders = await getUserFromHeaders();

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <AppProvider accessToken={accessToken} userHeaders={userHeaders}>
          <ThemeProvider
            attribute="class"
            defaultTheme="dark"
            disableTransitionOnChange
            enableSystem
          >
            <ToastContainer
              autoClose={5000}
              closeOnClick={false}
              draggable
              hideProgressBar={false}
              newestOnTop={false}
              pauseOnFocusLoss
              pauseOnHover
              position="top-right"
              rtl={false}
              theme="dark"
              transition={Bounce}
            />
            {children}
          </ThemeProvider>
        </AppProvider>
      </body>
    </html>
  );
}
